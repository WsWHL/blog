# Generated by Django 2.1 on 2018-09-30 00:42

from django.conf import settings
from django.db import migrations, models
import web.models


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('title', models.CharField(db_index=True, max_length=100)),
                ('subject', models.CharField(max_length=500, null=True)),
                ('content', models.TextField()),
                ('cover', models.URLField(max_length=1000, null=True)),
                ('images', models.TextField(null=True)),
                ('category_ids', models.CharField(max_length=200, null=True)),
                ('tag_ids', models.CharField(max_length=200, null=True)),
                ('hits', models.IntegerField()),
                ('score', models.DecimalField(decimal_places=1, max_digits=3)),
            ],
            options={
                'db_table': 'blog_article',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=50)),
                ('spell', models.CharField(db_index=True, max_length=200, unique=True)),
                ('level', models.SmallIntegerField()),
                ('parent_id', models.IntegerField()),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'blog_category',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('name', models.CharField(max_length=50)),
                ('spell', models.CharField(db_index=True, max_length=200, unique=True)),
                ('sort', models.IntegerField()),
            ],
            options={
                'db_table': 'blog_tag',
            },
        ),
        migrations.AlterModelTable(
            name='userinfo',
            table='blog_userinfo',
        ),
        migrations.AddField(
            model_name='tag',
            name='create_user',
            field=models.ForeignKey(on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tag',
            name='update_user',
            field=models.ForeignKey(null=True, on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='create_user',
            field=models.ForeignKey(on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='update_user',
            field=models.ForeignKey(null=True, on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='create_user',
            field=models.ForeignKey(on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='update_user',
            field=models.ForeignKey(null=True, on_delete=models.SET(web.models.UserManager.get_deleted_user_id), related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
